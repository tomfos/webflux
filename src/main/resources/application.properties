# Application name
spring.application.name=demo

# R2DBC Configuration
spring.r2dbc.url=r2dbc:postgresql://postgres:5432/postgres
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres

# Server Port
server.port=8089

# OTLP Tracing with Micrometer (to Tempo container)
management.tracing.enabled=true
management.tracing.sampling.probability=1.0

# Enable OTLP tracing export to Tempo container (use Docker service name, not localhost)
management.otlp.tracing.export.enabled=true
management.otlp.tracing.endpoint=http://my-tempo:4318/v1/traces

# (Optional) Disable metrics export if you're not using OTLP for metrics
management.otlp.metrics.export.enabled=false

# Actuator exposure and Prometheus metrics
management.endpoints.web.exposure.include=health,info,metrics,prometheus

# Micrometer histogram for HTTP metrics
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Identify the application in Grafana Observability dashboards
management.observations.key-values.application=grafana-observability

logging.file.name=/app/logs/grafana-observability.log
logging.level.root=INFO

# Show SQL queries with params
logging.level.io.r2dbc.postgresql.QUERY=DEBUG
logging.level.io.r2dbc.postgresql.PARAM=DEBUG
logging.level.org.springframework.data.r2dbc=DEBUG